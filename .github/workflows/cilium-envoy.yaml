name: Build and Release Cilium Envoy Proxy Image

on:
  workflow_dispatch:

jobs:
  release:
    timeout-minutes: 360
    name: Build cache and push images
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write
    env:
      SOURCE_REF: f19708f3d0188fe39b7e024b4525b75a9eeee61f
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Enable Docker IPv6
        run: |
          modprobe -v ipv6
          sudo sed -i -e '1s!^{!\{ "ipv6": true, "fixed-cidr-v6": "fd00::/80",!' /etc/docker/daemon.json || echo '{ "ipv6": true, "fixed-cidr-v6": "fd00::/80" }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Login to OCI registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: cilium/proxy
          ref: ${{ env.SOURCE_REF }}
          persist-credentials: false
      
      - name: Prep for build
        run: |
          echo "SOURCE_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "SOURCE_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          git rev-parse HEAD > SOURCE_VERSION
          echo "ENVOY_MINOR_RELEASE=$(cat ENVOY_VERSION | sed 's/envoy-\([0-9]\+\.[0-9]\+\)\..*/v\1/')" >> $GITHUB_ENV
          echo "ENVOY_PATCH_RELEASE=$(cat ENVOY_VERSION | sed 's/^envoy-\([0-9]\+\.[0-9]\+\.[0-9]\+$\)/v\1/')" >> $GITHUB_ENV
          echo "BAZEL_VERSION=$(cat .bazelversion)" >> $GITHUB_ENV
          echo "BUILDER_DOCKER_HASH=$(git ls-tree --full-tree HEAD -- ./Dockerfile.builder | awk '{ print $3 }')" >> $GITHUB_ENV

      - name: Cache Docker layers
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: /tmp/buildx-cache
          key: docker-cache-${{ env.SOURCE_BRANCH }}
  
      - name: Clear cache
        run: |
          rm -rf /tmp/buildx-cache/*
          docker buildx prune -f || exit 0
      
      - name: Multi-arch build & push master latest
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          provenance: false
          context: "."
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            BUILDER_BASE=quay.io/cilium/cilium-envoy-builder:${{ env.BAZEL_VERSION }}-${{ env.BUILDER_DOCKER_HASH}}
            ARCHIVE_IMAGE=quay.io/cilium/cilium-envoy-builder:main-archive-latest
            BAZEL_BUILD_OPTS=--remote_upload_local_results=false --define tcmalloc=disabled
            COPY_CACHE_EXT=.new
          # --define tcmalloc=gperftools
          cache-to: type=local,dest=/tmp/buildx-cache,mode=max
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/cilium-envoy:latest
            ghcr.io/${{ github.repository }}/cilium-envoy:${{ env.SOURCE_SHA }}
            ghcr.io/${{ github.repository }}/cilium-envoy:${{ env.ENVOY_MINOR_RELEASE }}-${{ env.SOURCE_SHA }}
            ghcr.io/${{ github.repository }}/cilium-envoy:${{ env.ENVOY_PATCH_RELEASE }}-${{ env.SOURCE_SHA }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 # v3.4.0

      - name: Sign Container Image
        run: |
          cosign sign -y ghcr.io/${{ github.repository }}/cilium-envoy@${{ steps.docker_build_cd.outputs.digest }}

      - name: Install Bom
        shell: bash
        env:
          # renovate: datasource=github-releases depName=kubernetes-sigs/bom
          BOM_VERSION: v0.5.1
        run: |
          curl -L https://github.com/kubernetes-sigs/bom/releases/download/${{ env.BOM_VERSION }}/bom-amd64-linux -o bom
          sudo mv ./bom /usr/local/bin/bom
          sudo chmod +x /usr/local/bin/bom

      - name: Generate SBOM
        shell: bash
        run: |
          bom generate -o sbom_cilium-envoy_${{ env.SOURCE_SHA }}.spdx --format=json --image=ghcr.io/${{ github.repository }}/cilium-envoy:${{ env.SOURCE_SHA }}

      - name: Attach SBOM to container images
        run: |
          cosign attach sbom --sbom sbom_cilium-envoy_${{ env.SOURCE_SHA }}.spdx ghcr.io/${{ github.repository }}/cilium-envoy@${{ steps.docker_build_cd.outputs.digest }}

      - name: Sign SBOM Image
        run: |
          docker_build_cd_digest="${{ steps.docker_build_cd.outputs.digest }}"
          image_name="ghcr.io/${{ github.repository }}/cilium-envoy:${docker_build_cd_digest/:/-}.sbom"
          docker_build_cd_sbom_digest="sha256:$(docker buildx imagetools inspect --raw ${image_name} | sha256sum | head -c 64)"
          cosign sign -y "ghcr.io/${{ github.repository }}/cilium-envoy@${docker_build_cd_sbom_digest}"

      - name: Envoy binary version check
        shell: bash
        run: |
          envoy_version=$(docker run --rm ghcr.io/${{ github.repository }}/cilium-envoy:${{ env.SOURCE_SHA }} cilium-envoy --version)
          expected_version=$(echo ${{ env.ENVOY_PATCH_RELEASE }} | sed 's/^v//')
          echo ${envoy_version}
          [[ "${envoy_version}" == *"${{ env.SOURCE_SHA }}/$expected_version"* ]]

      - name: Release Image Digest
        shell: bash
        run: |
          echo "Digests:"
          echo "ghcr.io/${{ github.repository }}/cilium-envoy:${{ env.SOURCE_SHA }}@${{ steps.docker_build_cd.outputs.digest }}"
          echo "ghcr.io/${{ github.repository }}/cilium-envoy:${{ env.ENVOY_MINOR_RELEASE }}-${{ env.SOURCE_SHA }}@${{ steps.docker_build_cd.outputs.digest }}"
          echo "ghcr.io/${{ github.repository }}/cilium-envoy:${{ env.ENVOY_PATCH_RELEASE }}-${{ env.SOURCE_SHA }}@${{ steps.docker_build_cd.outputs.digest }}"
